package org.systemsbiology.xtandem.mzml;

import org.junit.*;
import org.proteios.io.*;
import org.systemsbiology.xtandem.*;
import org.systemsbiology.xtandem.hadoop.*;
import org.systemsbiology.xtandem.sax.*;

import java.io.*;
import java.util.*;

/**
 * org.systemsbiology.xtandem.mzml.MzMLReaderTests
 * User: steven
 * Date: 4/25/11
 */

public class MzMLReaderTests {
    public static final MzMLReaderTests[] EMPTY_ARRAY = {};



    public static final String SAMPLE_SPECTRUM_FRAGMENT =
            "<spectrum id=\"S20\" scanNumber=\"20\" msLevel=\"2\">\n" +
                    "<cvParam cvLabel=\"MS\" accession=\"MS:1000580\" name=\"MSn spectrum\" value=\"\"/>\n" +
                    "<spectrumDescription>\n" +
                    "<cvParam cvLabel=\"MS\" accession=\"MS:1000127\" name=\"centroid mass spectrum\" value=\"\"/>\n" +
                    "<cvParam cvLabel=\"MS\" accession=\"MS:1000528\" name=\"lowest m/z value\" value=\"320.39\"/>\n" +
                    "<cvParam cvLabel=\"MS\" accession=\"MS:1000527\" name=\"highest m/z value\" value=\"1003.56\"/>\n" +
                    "<cvParam cvLabel=\"MS\" accession=\"MS:1000504\" name=\"base peak m/z\" value=\"456.347\"/>\n" +
                    "<cvParam cvLabel=\"MS\" accession=\"MS:1000505\" name=\"base peak intensity\" value=\"23433\"/>\n" +
                    "<cvParam cvLabel=\"MS\" accession=\"MS:1000285\" name=\"total ion current\" value=\"1.66755e+007\"/>\n" +
                    "<precursorList count=\"1\">\n" +
                    "<precursor spectrumRef=\"19\">\n" +
                    "<ionSelection>\n" +
                    "<cvParam cvLabel=\"MS\" accession=\"MS:1000040\" name=\"m/z\" value=\"445.34\"/>\n" +
                    "<cvParam cvLabel=\"MS\" accession=\"MS:1000041\" name=\"charge state\" value=\"2\"/>\n" +
                    "</ionSelection>\n" +
                    "<activation>\n" +
                    "<cvParam cvLabel=\"MS\" accession=\"MS:1000133\" name=\"collision-induced dissociation\" value=\"\"/>\n" +
                    "<cvParam cvLabel=\"MS\" accession=\"MS:1000045\" name=\"collision energy\" value=\"35.00\" unitAccession=\"MS:1000137\" unitName=\"Electron Volt\"/>\n" +
                    "</activation>\n" +
                    "</precursor>\n" +
                    "</precursorList>\n" +
                    "<scan instrumentRef=\"LCQ Deca\">\n" +
                    "<paramGroupRef ref=\"CommonMS2SpectrumParams\"/>\n" +
                    "<cvParam cvLabel=\"MS\" accession=\"MS:1000016\" name=\"scan time\" value=\"5.990500\" unitAccession=\"MS:1000038\" unitName=\"minute\"/>\n" +
                    "<cvParam cvLabel=\"MS\" accession=\"MS:1000512\" name=\"filter string\" value=\"+ c d Full ms2  445.35@cid35.00 [ 110.00-905.00]\"/>\n" +
                    "<selectionWindowList count=\"1\">\n" +
                    "<selectionWindow>\n" +
                    "<cvParam cvLabel=\"MS\" accession=\"MS:1000501\" name=\"scan m/z lower limit\" value=\"110.000000\"/>\n" +
                    "<cvParam cvLabel=\"MS\" accession=\"MS:1000500\" name=\"scan m/z upper limit\" value=\"905.000000\"/>\n" +
                    "</selectionWindow>\n" +
                    "</selectionWindowList>\n" +
                    "</scan>\n" +
                    "</spectrumDescription>\n" +
                    "<binaryDataArray arrayLength=\"43\" encodedLength=\"5000\" dataProcessingRef=\"Xcalibur Processing\">\n" +
                    "<cvParam cvLabel=\"MS\" accession=\"MS:1000523\" name=\"64-bit float\" value=\"\"/>\n" +
                    "<cvParam cvLabel=\"MS\" accession=\"MS:1000576\" name=\"no compression\" value=\"\"/>\n" +
                    "<cvParam cvLabel=\"MS\" accession=\"MS:1000514\" name=\"m/z array\" value=\"\"/>\n" +
                    "<binary>AAAAwNfia0AAAACApoJuQAAAAABF7nBAAAAAABhecUAAAACAIZJxQAAAAACjWnJAAAAAwF96c0AAAAAAOYxzQAAAAIBHkHRAAAAAwBbRdEAAAADA/wl1QAAAAIABL3VAAAAAgMdOdUAAAACAyl91QAAAAADCz3VAAAAAABPxdUAAAABAQy12QAAAAIBwUHZAAAAAwJxqdkAAAABA5nl2QAAAAIC7g3ZAAAAAQL0nd0AAAADAJOF3QAAAAMCS+ndAAAAAwEcVeEAAAAAA+SV4QAAAAECeRnhAAAAAwI3teEAAAACAzAx5QAAAAIAEH3lAAAAAgGOheUAAAAAAiUZ6QAAAAMAvonpAAAAAQCKvekAAAAAAKcF6QAAAAAB6znpAAAAAAMPeekAAAACAie16QAAAAMDfantAAAAAAFG/e0AAAACAOcx7QAAAAMCC6ntAAAAAgKCYgEA=</binary>\n" +
                    "</binaryDataArray>\n" +
                    "<binaryDataArray arrayLength=\"43\" encodedLength=\"2500\">\n" +
                    "<cvParam cvLabel=\"MS\" accession=\"MS:1000523\" name=\"64-bit float\" value=\"\"/>\n" +
                    "<cvParam cvLabel=\"MS\" accession=\"MS:1000576\" name=\"no compression\" value=\"\"/>\n" +
                    "<cvParam cvLabel=\"MS\" accession=\"MS:1000515\" name=\"intensity array\" value=\"\"/>\n" +
                    "<binary>AAAAAAD+p0AAAAAAAKyTQAAAAAAAoIFAAAAAAACGokAAAAAAALiZQAAAAAAAKJhAAAAAAAAUkUAAAAAAAGiXQAAAAAAAWJFAAAAAAAB0n0AAAAAAAPyXQAAAAAAA1J5AAAAAAECn20AAAAAAAM6vQAAAAAAAwIhAAAAAAAAwo0AAAAAAAL6oQAAAAAAAJJpAAAAAAMhtCkEAAAAAwGDdQAAAAAAAAABAAAAAAACgkkAAAAAAAOSTQAAAAAAALKBAAAAAAABgqEAAAAAAgMPGQAAAAAAAmKBAAAAAAACoiUAAAAAAAMiJQAAAAAAAfrJAAAAAAAAcqUAAAAAAAEyTQAAAAAAA2blAAAAAAADCskAAAAAAAPCpQAAAAADUXxJBAAAAAMDH+EAAAAAAANCEQAAAAAAAkJ1AAAAAAABUlEAAAAAAAAyeQAAAAAAAWIVAAAAAAABgnUA=</binary>\n" +
                    "</binaryDataArray>\n" +
                    "</spectrum>";


    public static final String SPECTRUM2_1 =
            "<spectrum index=\"5\" id=\"controllerType=0 controllerNumber=1 scan=6\" defaultArrayLength=\"4433\">\n" +
                    "          <cvParam cvRef=\"MS\" accession=\"MS:1000579\" name=\"MS1 spectrum\" value=\"\"/>\n" +
                    "          <cvParam cvRef=\"MS\" accession=\"MS:1000511\" name=\"ms level\" value=\"1\"/>\n" +
                    "          <cvParam cvRef=\"MS\" accession=\"MS:1000130\" name=\"positive scan\" value=\"\"/>\n" +
                    "          <cvParam cvRef=\"MS\" accession=\"MS:1000128\" name=\"profile spectrum\" value=\"\"/>\n" +
                    "          <cvParam cvRef=\"MS\" accession=\"MS:1000504\" name=\"base peak m/z\" value=\"445.119262695313\" unitCvRef=\"MS\" unitAccession=\"MS:1000040\" unitName=\"m/z\"/>\n" +
                    "          <cvParam cvRef=\"MS\" accession=\"MS:1000505\" name=\"base peak intensity\" value=\"2.22907671875e05\" unitCvRef=\"MS\" unitAccession=\"MS:1000131\" unitName=\"number of counts\"/>\n" +
                    "          <cvParam cvRef=\"MS\" accession=\"MS:1000285\" name=\"total ion current\" value=\"1.887792625e06\"/>\n" +
                    "          <cvParam cvRef=\"MS\" accession=\"MS:1000528\" name=\"lowest observed m/z\" value=\"300.001450707989\" unitCvRef=\"MS\" unitAccession=\"MS:1000040\" unitName=\"m/z\"/>\n" +
                    "          <cvParam cvRef=\"MS\" accession=\"MS:1000527\" name=\"highest observed m/z\" value=\"1814.52058386773\" unitCvRef=\"MS\" unitAccession=\"MS:1000040\" unitName=\"m/z\"/>\n" +
                    "          <scanList count=\"1\">\n" +
                    "            <cvParam cvRef=\"MS\" accession=\"MS:1000795\" name=\"no combination\" value=\"\"/>\n" +
                    "            <scan>\n" +
                    "              <cvParam cvRef=\"MS\" accession=\"MS:1000016\" name=\"scan start time\" value=\"0.093163333333\" unitCvRef=\"UO\" unitAccession=\"UO:0000031\" unitName=\"minute\"/>\n" +
                    "              <cvParam cvRef=\"MS\" accession=\"MS:1000512\" name=\"filter string\" value=\"FTMS + p NSI Full ms [300.00-1800.00]\"/>\n" +
                    "              <cvParam cvRef=\"MS\" accession=\"MS:1000616\" name=\"preset scan configuration\" value=\"1\"/>\n" +
                    "              <cvParam cvRef=\"MS\" accession=\"MS:1000927\" name=\"ion injection time\" value=\"500.0\" unitCvRef=\"UO\" unitAccession=\"UO:0000028\" unitName=\"millisecond\"/>\n" +
                    "              <scanWindowList count=\"1\">\n" +
                    "                <scanWindow>\n" +
                    "                  <cvParam cvRef=\"MS\" accession=\"MS:1000501\" name=\"scan window lower limit\" value=\"300\" unitCvRef=\"MS\" unitAccession=\"MS:1000040\" unitName=\"m/z\"/>\n" +
                    "                  <cvParam cvRef=\"MS\" accession=\"MS:1000500\" name=\"scan window upper limit\" value=\"1800\" unitCvRef=\"MS\" unitAccession=\"MS:1000040\" unitName=\"m/z\"/>\n" +
                    "                </scanWindow>\n" +
                    "              </scanWindowList>\n" +
                    "            </scan>\n" +
                    "          </scanList>\n" ;
    public static final String SPECTRUM2_2 =
                     "          <binaryDataArrayList count=\"2\">\n" +
                    "            <binaryDataArray encodedLength=\"47288\">\n" +
                    "              <cvParam cvRef=\"MS\" accession=\"MS:1000523\" name=\"64-bit float\" value=\"\"/>\n" +
                    "              <cvParam cvRef=\"MS\" accession=\"MS:1000576\" name=\"no compression\" value=\"\"/>\n" +
                    "              <cvParam cvRef=\"MS\" accession=\"MS:1000514\" name=\"m/z array\" value=\"\" unitCvRef=\"MS\" unitAccession=\"MS:1000040\" unitName=\"m/z\"/>\n" +
                    "              <binary></binary>\n" +
                    "            </binaryDataArray>\n";
    public static final String SPECTRUM2_3 =
                      "            <binaryDataArray encodedLength=\"23644\">\n" +
                    "              <cvParam cvRef=\"MS\" accession=\"MS:1000521\" name=\"32-bit float\" value=\"\"/>\n" +
                    "              <cvParam cvRef=\"MS\" accession=\"MS:1000576\" name=\"no compression\" value=\"\"/>\n" +
                    "              <cvParam cvRef=\"MS\" accession=\"MS:1000515\" name=\"intensity array\" value=\"\" unitCvRef=\"MS\" unitAccession=\"MS:1000131\" unitName=\"number of counts\"/>\n" +
                    "              <binary></binary>\n" +
                    "            </binaryDataArray>\n" +
                    "          </binaryDataArrayList>\n" +
                    "        </spectrum>";

   //   @Test
     public void testScanToMzML()
     {
         // test that to xml write and decode is idempotent
         RawPeptideScan pepScan = MzMLReader.scanFromFragment(SAMPLE_SPECTRUM_FRAGMENT);
         String mzml = pepScan.toMzMLFragment();
      //   System.out.println(mzml);
         RawPeptideScan pepScan2 = MzMLReader.scanFromFragment(mzml);
         String mzml2 = pepScan2.toMzMLFragment();
         if(!mzml.equals(mzml2)) {
             System.out.println(mzml);
             System.out.println(mzml2);
             Assert.assertEquals(mzml,mzml2);

         }

     }
  //  @Test
     public void testScanToMzML2()
     {
         StringBuilder sb = new StringBuilder(SPECTRUM2_1);

         sb.append(SPECTRUM2_2);
         sb.append(SPECTRUM2_3);
             // test that to xml write and decode is idempotent
         RawPeptideScan pepScan = MzMLReader.scanFromFragment(sb.toString());
         String mzml = pepScan.toMzMLFragment();
      //   System.out.println(mzml);
         RawPeptideScan pepScan2 = MzMLReader.scanFromFragment(mzml);
         String mzml2 = pepScan2.toMzMLFragment();
         if(!mzml.equals(mzml2)) {
             System.out.println(mzml);
             System.out.println(mzml2);
             Assert.assertEquals(mzml,mzml2);

         }

     }

    /**
     * test that my sax parser can reda a spectrun - this is needed when we are parsing
     * ScanScores and including the raw data
     */
  //  @Test
    public void testSpectrumReader()
    {
        // test that to xml write and decode is idempotent
        RawPeptideScan pepScan = MzMLReader.scanFromFragment(SAMPLE_SPECTRUM_FRAGMENT);

        RawPeptideScan pepScan2 = XTandemHadoopUtilities.readSpectrum(SAMPLE_SPECTRUM_FRAGMENT);

          Assert.assertTrue(pepScan.equivalent(pepScan2));
    }

    
  //  @Test
    public void testScanToMzMLDoesNotLoseData()
    {
        // test that to xml write and decode is idempotent
        RawPeptideScan pepScan = MzMLReader.scanFromFragment(SAMPLE_SPECTRUM_FRAGMENT);
        String mzml = pepScan.toMzMLFragment();
     //   System.out.println(mzml);
        RawPeptideScan pepScan2 = MzMLReader.scanFromFragment(mzml);

        Assert.assertTrue(pepScan.equivalent(pepScan2));
    }

  //  @Test
    public void testScanRead()
    {
        // this should not throw exceptions
        RawPeptideScan pepScan = MzMLReader.scanFromFragment(SAMPLE_SPECTRUM_FRAGMENT);
       // todo test proper values
    }

    /**
     * Same as the test with Proteos except we are handling an XML Fragment
     */
   // @Test
    public void testReadAsProteos() {

        SpectrumInterface testSpectrum1 = MzMLReader.spectrumFromFragment(SAMPLE_SPECTRUM_FRAGMENT);

        int dataLength1 = 43;
        int dataLength2 = testSpectrum1.listMass().length;
        Assert.assertEquals(
                "getSpectrum() should return the correct number of data values",
                dataLength1, dataLength2);
        double lastMass = 0.0;
        double lastIntensity = 0.0;
        double[] massArray = testSpectrum1.listMass();
        double[] intensityArray = testSpectrum1.listIntensities();
        for (int i = 0; i < dataLength2; i++) {
            lastMass = massArray[i];
            lastIntensity = intensityArray[i];
            //System.out.println("TestMzMLFileReader::testGetSpectrum(): i = " + i + " mass = " + lastMass + " intensity = " + lastIntensity);
        }
        Assert.assertEquals(
                "listMass() should return the correct double",
                531.078369140625, lastMass, 0.000001);
        Assert.assertEquals(
                "listIntensities() should return the correct double",
                1880.0, lastIntensity, 0.000001);
    }



  //  @Test
    public void testRead10spectra_32() {
        final Class<? extends MzMLReaderTests> aClass = getClass();

        String mzMLFie = "10spectra_32x32.mzML";
        InputStream is = aClass.getResourceAsStream(mzMLFie);
        RawPeptideScan[] scans = MessagingMzMLReader.readAllScans(is);
        Assert.assertEquals(10, scans.length);


        String mzXMLFie = "10spectra_32.mzXML";
        is = aClass.getResourceAsStream(mzXMLFie);
        MzXMLHandler handler = new MzXMLHandler();
        MassSpecRun[] runs = XTandemUtilities.parseFile(is, handler, mzXMLFie);
        Assert.assertEquals(1, runs.length);
        MassSpecRun run = runs[0];
        RawPeptideScan[] mzXMLScans = run.getScans();
        Assert.assertEquals(10, mzXMLScans.length);
        Arrays.sort(mzXMLScans);
        Arrays.sort(scans);
         for (int i = 0; i < mzXMLScans.length; i++) {
            RawPeptideScan mzXMLScan = mzXMLScans[i];
            RawPeptideScan scan = scans[i];
            boolean isSame = mzXMLScan.equivalent(scan);
            if(!isSame)
               Assert.assertTrue(isSame);   // break here
        }



    }

    /**
     * read a whole file packed as a resource
     */
  //  @Test
    public void testMzml_vs_mzxml() {
        Class cls = MzMLReaderTests.class;
        InputStream inp = cls.getResourceAsStream("10spectra_32x32.mzML");


        // Assert.assertEquals(10, spectra.length);

    }

}
